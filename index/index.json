{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/init(apikey:credentials:urlsession:)","title":"init(apiKey: String, credentials: Credentials?, urlSession: URLSession)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/apikey","title":"var apiKey: String","type":"property"},{"path":"\/documentation\/snabblepay\/snabblepay\/delegate","title":"var delegate: SnabblePayDelegate?","type":"property"},{"path":"\/documentation\/snabblepay\/snabblepay\/environment","title":"var environment: Environment","type":"property"},{"path":"\/documentation\/snabblepay\/snabblepay\/urlsession","title":"var urlSession: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/acceptmandate(withid:foraccountid:)","title":"func acceptMandate(withId: Account.Mandate.ID, forAccountId: Account.ID) -> AnyPublisher<Account.Mandate, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/acceptmandate(withid:foraccountid:completionhandler:)","title":"func acceptMandate(withId: Account.Mandate.ID, forAccountId: Account.ID, completionHandler: (Result<Account.Mandate, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/account(withid:)","title":"func account(withId: Account.ID) -> AnyPublisher<Account, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/account(withid:completionhandler:)","title":"func account(withId: Account.ID, completionHandler: (Result<Account, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/accountcheck(withappuri:city:countrycode:)","title":"func accountCheck(withAppUri: URL, city: String, countryCode: String) -> AnyPublisher<Account.Check, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/accountcheck(withappuri:city:countrycode:completionhandler:)","title":"func accountCheck(withAppUri: URL, city: String, countryCode: String, completionHandler: (Result<Account.Check, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/accounts()","title":"func accounts() -> AnyPublisher<[Account], SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/accounts(completionhandler:)","title":"func accounts(completionHandler: (Result<[Account], SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/createmandate(foraccountid:)","title":"func createMandate(forAccountId: Account.ID) -> AnyPublisher<Account.Mandate, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/createmandate(foraccountid:completionhandler:)","title":"func createMandate(forAccountId: Account.ID, completionHandler: (Result<Account.Mandate, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/declinemandate(withid:foraccountid:)","title":"func declineMandate(withId: Account.Mandate.ID, forAccountId: Account.ID) -> AnyPublisher<Account.Mandate, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/declinemandate(withid:foraccountid:completionhandler:)","title":"func declineMandate(withId: Account.Mandate.ID, forAccountId: Account.ID, completionHandler: (Result<Account.Mandate, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/deleteaccount(withid:)","title":"func deleteAccount(withId: Account.ID) -> AnyPublisher<Account, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/deleteaccount(withid:completionhandler:)","title":"func deleteAccount(withId: Account.ID, completionHandler: (Result<Account, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/deletecustomer()","title":"func deleteCustomer() -> AnyPublisher<Customer, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/deletesession(withid:)","title":"func deleteSession(withId: Session.ID) -> AnyPublisher<Session, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/deletesession(withid:completionhandler:)","title":"func deleteSession(withId: Session.ID, completionHandler: (Result<Session, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/mandate(foraccountid:)","title":"func mandate(forAccountId: Account.ID) -> AnyPublisher<Account.Mandate, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/mandate(foraccountid:completionhandler:)","title":"func mandate(forAccountId: Account.ID, completionHandler: (Result<Account.Mandate, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/refreshtoken(withsessionid:)","title":"func refreshToken(withSessionId: Session.ID) -> AnyPublisher<Session.Token, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/refreshtoken(withsessionid:completionhandler:)","title":"func refreshToken(withSessionId: Session.ID, completionHandler: (Result<Session.Token, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/session(withid:)","title":"func session(withId: Session.ID) -> AnyPublisher<Session, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/session(withid:completionhandler:)","title":"func session(withId: Session.ID, completionHandler: (Result<Session, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/sessions()","title":"func sessions() -> AnyPublisher<[Session], SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/sessions(completionhandler:)","title":"func sessions(completionHandler: (Result<[Session], SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/startsession(withaccountid:)","title":"func startSession(withAccountId: Account.ID) -> AnyPublisher<Session, SnabblePay.Error>","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/startsession(withaccountid:completionhandler:)","title":"func startSession(withAccountId: Account.ID, completionHandler: (Result<Session, SnabblePay.Error>) -> Void)","type":"method"},{"path":"\/documentation\/snabblepay\/snabblepay\/updatecustomer(withid:loyaltyid:)","title":"func updateCustomer(withId: String?, loyaltyId: String?) -> AnyPublisher<Customer, SnabblePay.Error>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/loglevel","title":"static var logLevel: Logger.Level","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/decodingerror(_:)","title":"case decodingError(DecodingError)","type":"case"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/invalidrequesterror(_:)","title":"case invalidRequestError(String)","type":"case"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/invalidresponse(_:)","title":"case invalidResponse(URLResponse)","type":"case"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/transporterror(_:)","title":"case transportError(URLError)","type":"case"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/unexpected(_:)","title":"case unexpected(Swift.Error)","type":"case"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/validationerror(_:)","title":"case validationError(ValidationError)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/snabblepay\/snabblepay\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/snabblepay\/error","title":"SnabblePay.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepay\/networkmanager(_:didupdatecredentials:)","title":"func networkManager(NetworkManager, didUpdateCredentials: SnabblePayNetwork.Credentials?)","type":"method"}],"path":"\/documentation\/snabblepay\/snabblepay\/networkmanagerdelegate-implementations","title":"NetworkManagerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/snabblepay","title":"SnabblePay","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/snabblepaydelegate\/snabblepay(_:didupdatecredentials:)","title":"func snabblePay(SnabblePay, didUpdateCredentials: Credentials?)","type":"method"}],"path":"\/documentation\/snabblepay\/snabblepaydelegate","title":"SnabblePayDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/check\/appuri","title":"let appUri: URL","type":"property"},{"path":"\/documentation\/snabblepay\/account\/check\/validationurl","title":"let validationURL: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/check\/id-1xjq9","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/snabblepay\/account\/check\/id-878nc","title":"var id: URL","type":"property"}],"path":"\/documentation\/snabblepay\/account\/check\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/account\/check","title":"Account.Check","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/htmltext","title":"let htmlText: String?","type":"property"},{"path":"\/documentation\/snabblepay\/account\/mandate\/id-swift.property","title":"let id: ID","type":"property"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.property","title":"let state: State","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/id-swift.typealias","title":"Account.Mandate.ID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/declined","title":"case declined","type":"case"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/missing","title":"case missing","type":"case"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/pending","title":"case pending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/account\/mandate\/state-swift.enum","title":"Account.Mandate.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/mandate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/snabblepay\/account\/mandate\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/snabblepay\/account\/mandate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/account\/mandate","title":"Account.Mandate","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/bank","title":"let bank: String","type":"property"},{"path":"\/documentation\/snabblepay\/account\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/snabblepay\/account\/currencycode-swift.property","title":"let currencyCode: CurrencyCode","type":"property"},{"path":"\/documentation\/snabblepay\/account\/holdername","title":"let holderName: String","type":"property"},{"path":"\/documentation\/snabblepay\/account\/iban-swift.property","title":"let iban: IBAN","type":"property"},{"path":"\/documentation\/snabblepay\/account\/id-swift.property-187lz","title":"let id: ID","type":"property"},{"path":"\/documentation\/snabblepay\/account\/mandatestate","title":"let mandateState: Mandate.State","type":"property"},{"path":"\/documentation\/snabblepay\/account\/name","title":"let name: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/currencycode-swift.typealias","title":"Account.CurrencyCode","type":"typealias"},{"path":"\/documentation\/snabblepay\/account\/iban-swift.typealias","title":"Account.IBAN","type":"typealias"},{"path":"\/documentation\/snabblepay\/account\/id-swift.typealias","title":"Account.ID","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/snabblepay\/account\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/snabblepay\/account\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/snabblepay\/account\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/account\/id-swift.property-9nps6","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/snabblepay\/account\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/account","title":"Account","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/credentials\/init(identifier:secret:)","title":"init(identifier: Identifier, secret: Secret)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/credentials\/identifier-swift.property","title":"let identifier: Identifier","type":"property"},{"path":"\/documentation\/snabblepay\/credentials\/secret-swift.property","title":"let secret: Secret","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/credentials\/identifier-swift.typealias","title":"Credentials.Identifier","type":"typealias"},{"path":"\/documentation\/snabblepay\/credentials\/secret-swift.typealias","title":"Credentials.Secret","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/credentials\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/snabblepay\/credentials\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/credentials\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/snabblepay\/credentials\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/credentials","title":"Credentials","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/customer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/customer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/snabblepay\/customer\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/snabblepay\/customer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/customer","title":"Customer","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/session\/token-swift.struct\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/snabblepay\/session\/token-swift.struct\/expiresat","title":"let expiresAt: Date","type":"property"},{"path":"\/documentation\/snabblepay\/session\/token-swift.struct\/id-swift.property","title":"let id: ID","type":"property"},{"path":"\/documentation\/snabblepay\/session\/token-swift.struct\/refreshat","title":"let refreshAt: Date","type":"property"},{"path":"\/documentation\/snabblepay\/session\/token-swift.struct\/value","title":"let value: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/session\/token-swift.struct\/id-swift.typealias","title":"Session.Token.ID","type":"typealias"}],"path":"\/documentation\/snabblepay\/session\/token-swift.struct","title":"Session.Token","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/session\/account","title":"let account: Account","type":"property"},{"path":"\/documentation\/snabblepay\/session\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/snabblepay\/session\/expiresat","title":"let expiresAt: Date","type":"property"},{"path":"\/documentation\/snabblepay\/session\/id-swift.property","title":"let id: ID","type":"property"},{"path":"\/documentation\/snabblepay\/session\/token-swift.property","title":"let token: Token","type":"property"},{"path":"\/documentation\/snabblepay\/session\/transaction","title":"let transaction: Transaction?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/session\/id-swift.typealias","title":"Session.ID","type":"typealias"}],"path":"\/documentation\/snabblepay\/session","title":"Session","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/amount","title":"let amount: Int","type":"property"},{"path":"\/documentation\/snabblepay\/transaction\/currencycode","title":"let currencyCode: String","type":"property"},{"path":"\/documentation\/snabblepay\/transaction\/id-swift.property","title":"let id: ID","type":"property"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.property","title":"let state: State","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/id-swift.typealias","title":"Transaction.ID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/aborted","title":"case aborted","type":"case"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/errored","title":"case errored","type":"case"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/preauthorizationfailed","title":"case preauthorizationFailed","type":"case"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/preauthorizationsuccessful","title":"case preauthorizationSuccessful","type":"case"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/successful","title":"case successful","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/transaction\/state-swift.enum","title":"Transaction.State","type":"enum"}],"path":"\/documentation\/snabblepay\/transaction","title":"Transaction","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.property","title":"let reason: Reason","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/accountnotfound","title":"case accountNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/customernotfound","title":"case customerNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/invalidsessionstate","title":"case invalidSessionState","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/invalidtransactionstate","title":"case invalidTransactionState","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/localmandate","title":"case localMandate","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/mandatenotaccepted","title":"case mandateNotAccepted","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/mandatenotfound","title":"case mandateNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/sessionhastransaction","title":"case sessionHasTransaction","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/sessionnotfound","title":"case sessionNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/sessiontokenexpired","title":"case sessionTokenExpired","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/tokennotfound","title":"case tokenNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/transactionalreadystarted","title":"case transactionAlreadyStarted","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/transactionnotfound","title":"case transactionNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/usernotfound","title":"case userNotFound","type":"case"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/validationerror","title":"case validationError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/snabblepay\/validationerror\/reason-swift.enum","title":"ValidationError.Reason","type":"enum"}],"path":"\/documentation\/snabblepay\/validationerror","title":"ValidationError","type":"struct"}],"path":"\/documentation\/snabblepay","title":"SnabblePay","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}