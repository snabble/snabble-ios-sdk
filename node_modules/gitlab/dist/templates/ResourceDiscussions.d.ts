import { BaseRequestOptions, BaseService, BaseServiceOptions, PaginatedRequestOptions, Sudo } from '../infrastructure';
import { ResourceId, DiscussionId, NoteId } from '..';
declare class ResourceDiscussions extends BaseService {
    protected resource2Type: string;
    constructor(resourceType: string, resource2Type: string, options: BaseServiceOptions);
    addNote(resourceId: ResourceId, resource2Id: ResourceId, discussionId: DiscussionId, noteId: NoteId, content: string, options?: BaseRequestOptions): Promise<object>;
    all(resourceId: ResourceId, resource2Id: ResourceId, options?: PaginatedRequestOptions): Promise<import("../infrastructure").GetResponse>;
    create(resourceId: ResourceId, resource2Id: ResourceId, content: string, options?: BaseRequestOptions): Promise<object>;
    editNote(resourceId: ResourceId, resource2Id: ResourceId, discussionId: DiscussionId, noteId: NoteId, options?: BaseRequestOptions): Promise<object>;
    removeNote(resourceId: ResourceId, resource2Id: ResourceId, discussionId: DiscussionId, noteId: NoteId, options?: Sudo): Promise<object>;
    show(resourceId: ResourceId, resource2Id: ResourceId, discussionId: DiscussionId, options?: Sudo): Promise<import("../infrastructure").GetResponse>;
}
export default ResourceDiscussions;
